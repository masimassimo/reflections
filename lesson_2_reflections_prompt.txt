Q:What happens when you initialize a repository? Why do you need to do it?

A:When I initialize a repostitory git creates .git directory i need it to create that directory that contains meta data.

Q:How is staging area different from the working directory and the repository? What value do you think it offers?

A:I think that staging is something that keeps the modified files separated from originals before we committ all the change.

Q:How can I use the staging area to make sure you have one commit per logical change?

A:I can see the changes with the git diff --staged, in this way i will have the differences between the files. If I have added a logical change i can commit.

Q:What are some situations when branches would be helpful in keeping your history organized? How would branches help?

A:I think that branches would be helpful when i want to try some features without modify the original project. They can help me keeping separated the files.

Q:How do the diagrams help you visualize the branch structure?

A:I think that with the diagrams i can look to the "history" of the repository, and where the project took othes ways.

Q:What is the result of merging two branches toghether? Why do we represent in the diagram the way we do?

A:The result is that the merged branch will have all the changes made in the two branches in one file. We represent in the diagram the merged path as an unique path, because we need to reach all the parents commits.

Q:What are the pros and the cons of Git's automatic merging vs. always doing merges manually?

A:The pros are that git looks automatically to the changes made in the files by me and others so it looks at all the files and picks the most recent rows for the final file. I don't really see any cons, if I want to find one anyway i can say that git is not a person so it can't make a decision or think what is good and what is bad inside the code. But it is build in this way, so i can't see any cons.

Q:Describe the differences between forks, clones, and branches. When would you use one instead of another?

A:Forks are different implementations of the same project on github be made by another user, so i will use them if I want to modify someone project; clones are the copies of a remote repository on my computer they are the downloaded version of the projects; Branches are different implementation of the project, created to preserve the original code for security, reliabity or relase reasons.

Q:What is the benefit of having a copy of the last known state of the remote stored locally?

A:The benefit is that i know what are the newest version of the project.